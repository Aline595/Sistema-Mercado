package teste;
import javax.swing.*;
import dao.*;
import java.awt.Image;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.net.URL;
import java.util.*;
import javax.swing.JButton;
import modelo.*;

/**
 *
 * @author Aline
 */
public class ConsultaCompras extends javax.swing.JFrame {
    
    /**
     * Creates new form ConsultaCompras
     */
    public ConsultaCompras() {
        initComponents();
        //popularBD();
        URL caminhoIcone = getClass().getResource("/imagem/basket.png");
        Image iconeTitulo = Toolkit.getDefaultToolkit().getImage(caminhoIcone);
        this.setIconImage(iconeTitulo);
        
        ClienteDAO clidao = new ClienteDAO();
        clientes = clidao.getListar();
        for(Cliente item: clientes)
        {   jComboBox1.addItem(item.getId()+ " - " + item.getNome());
        }        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jComboBox2 = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        btn_Voltar = new javax.swing.JButton("Tela Inicial");
        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
       
        jLabel1.setText("Escolha um cliente:");
        
        jLabel2.setText("Escolha uma compra:");
        
        btn_Voltar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagem/house.png")));
         btn_Voltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                //ação
                new TelaInicial().setVisible(true);
                dispose();
            }
        });
        
        jComboBox1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox1ItemStateChanged(evt);
            }
        });

        jComboBox2.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox2ItemStateChanged(evt);
            }
        });

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(63, 63, 63)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addComponent(btn_Voltar, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(123, Short.MAX_VALUE))
                
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(93, 93, 93)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_Voltar, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(63, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>                        

    private void jComboBox1ItemStateChanged(java.awt.event.ItemEvent evt) {                                            
        // TODO add your handling code here:
        int apertei = jComboBox1.getSelectedIndex();
        if(apertei >= 0)
        {   int id = clientes.get(apertei).getId();
            CompraDAO cmpdao = new CompraDAO();
            compras = cmpdao.getListar(id);
            jComboBox2.removeAllItems();
            jTextArea1.setText("---Sem dados---");
            for(Compra item: compras)
            {   jComboBox2.addItem(item.getCodigo() + " - " + item.getData() + " - " + item.getValor());
            }
        }
    }                                           

    private void jComboBox2ItemStateChanged(java.awt.event.ItemEvent evt) {                                            
        // TODO add your handling code here:
        int apertei = jComboBox2.getSelectedIndex();
        if(apertei >= 0)
        {   int id = compras.get(apertei).getCodigo();
            ItensCompradosDAO itensdao = new ItensCompradosDAO();
            itensdao.lerItens(compras.get(apertei)); //lendo os itens comprados
            jTextArea1.setText(compras.get(apertei).toString());
        }
    }    
    
   

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ConsultaCompras.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ConsultaCompras.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ConsultaCompras.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ConsultaCompras.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ConsultaCompras().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify                     
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JButton btn_Voltar; 
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;

    
   
    // End of variables declaration                   
    private List<Cliente> clientes;
    private List<Compra> compras;

    private void popularBD()
    {
        //Clientes
        ContatoDAO cdao = new ContatoDAO();
        cdao.adiciona(new Contato("Celso", "c@gmail.com", "Rua XYZ, 123", "01/01/2000"));
        cdao.adiciona(new Contato("Aline", "a@gmail.com", "Rua XYZ, 234", "01/01/2002"));
        cdao.adiciona(new Contato("Alexandre", "ale@gmail.com", "Rua XYZ, 678", "01/01/2001")); // O Alexandre será somente contato 
        
        ClienteDAO clidao = new ClienteDAO();
        clidao.adiciona(new Cliente("Celso", "c@gmail.com", "Rua XYZ, 123", "01/01/2000", "123456789"));
        clidao.adiciona(new Cliente("Aline", "a@gmail.com", "Rua XYZ, 234", "01/01/2002", "234567890"));
        clidao.adiciona(new Cliente("Marcelo", "m@gmail.com", "Rua ABC, 234", "01/01/1982", "3456789012")); //O Marcelo não era contato e foi adicionado direto como cliente
        
        //Estoque
        int id;
        ProdutoDAO pdao = new ProdutoDAO();
        Produto p1 = new Produto("Arroz Camil", 5.45f, 1000.0f);
        id = pdao.adiciona(p1);
        p1.setCodigo(id);
        Produto p2 = new Produto("Feijão Camil", 4.57f, 500.0f);
        id = pdao.adiciona(p2);
        p2.setCodigo(id);
        Produto p3 = new Produto("Carne Alcatra", 28.57f, 90.0f);
        id = pdao.adiciona(p3);
        p3.setCodigo(id);
        Produto p4 = new Produto("Salmão", 45.00f, 98.0f);
        id = pdao.adiciona(p4);
        p4.setCodigo(id);
        
        //Compra 1 da Aline (id=2)
        Compra compra1 = new Compra();
        compra1.setData("31/10/2019");
        ArrayList<Produto> itensCompradosAline1 = new ArrayList<Produto>();
        ArrayList<Float> quantCompradaAline1 = new ArrayList<Float>();
        itensCompradosAline1.add(p1); //Arroz Camil
        quantCompradaAline1.add(2f); //2 kg
        itensCompradosAline1.add(p2); //Feijão Camil
        quantCompradaAline1.add(1f); //1 kg
        itensCompradosAline1.add(p4); //Salmao Chileno
        quantCompradaAline1.add(2f); //2 kg
        compra1.setItensComprados(itensCompradosAline1);
        compra1.setQuantidades(quantCompradaAline1);
        compra1.setValor(2*5.45f + 1*4.57f + 2*45.00f);
        //armazenando a compra (sem os itens ainda)
        CompraDAO compradao = new CompraDAO();
        id = compradao.adiciona(compra1, 2); //id da Aline é 2
        compra1.setCodigo(id);
        //armazenando os itens comprados
        ItensCompradosDAO itensdao = new ItensCompradosDAO();
        itensdao.gravaItens(compra1);
        
        //Compra 2 da Aline (id=2)
        Compra compra2 = new Compra();
        compra2.setData("29/11/2019");
        ArrayList<Produto> itensCompradosAline2 = new ArrayList<Produto>();
        ArrayList<Float> quantCompradaAline2 = new ArrayList<Float>();
        itensCompradosAline2.add(p3); //Carne Alcatra
        quantCompradaAline2.add(1f); //1 kg
        itensCompradosAline2.add(p2); //Feijão Camil
        quantCompradaAline2.add(2f); //2 kg
        compra2.setItensComprados(itensCompradosAline2);
        compra2.setQuantidades(quantCompradaAline2);
        compra2.setValor(28.57f + 2*4.57f);
        //armazenando a compra (sem os itens ainda)
        id = compradao.adiciona(compra2, 2); //id da Aline é 2
        compra2.setCodigo(id);
        //armazenando os itens comprados
        itensdao.gravaItens(compra2);
        
        //Compra do Celso (id=1)
        Compra compra3 = new Compra();
        compra3.setData("03/11/2019");
        ArrayList<Produto> itensCompradosCelso = new ArrayList<Produto>();
        ArrayList<Float> quantCompradaCelso = new ArrayList<Float>();
        itensCompradosCelso.add(p1); //Arroz Camil
        quantCompradaCelso.add(3f); //3 kg
        compra3.setItensComprados(itensCompradosCelso);
        compra3.setQuantidades(quantCompradaCelso);
        compra3.setValor(3*5.45f);
        //armazenando a compra (sem os itens ainda)
        compradao = new CompraDAO();
        id = compradao.adiciona(compra3, 1); //id do Celso é 1
        compra3.setCodigo(id);
        //armazenando os itens comprados
        itensdao.gravaItens(compra3);
        
        //Compra do Marcelo (id=4)
        Compra compra4 = new Compra();
        compra4.setData("04/11/2019");
        ArrayList<Produto> itensCompradosMarcelo = new ArrayList<Produto>();
        ArrayList<Float> quantCompradaMarcelo = new ArrayList<Float>();
        itensCompradosMarcelo.add(p2); //Feijão Camil
        quantCompradaMarcelo.add(1f); //1 kg
        compra4.setItensComprados(itensCompradosMarcelo);
        compra4.setQuantidades(quantCompradaMarcelo);
        compra4.setValor(1*4.57f);
        //armazenando a compra (sem os itens ainda)
        compradao = new CompraDAO();
        id = compradao.adiciona(compra4, 4); //id do Marcelo é 4
        compra4.setCodigo(id);
        //armazenando os itens comprados
        itensdao.gravaItens(compra4);
    
    }
}